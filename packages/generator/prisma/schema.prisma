datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator directus {
  provider   = "node ./build/main.js"
  version    = 1
  directus   = "10.8.3"
  configFile = "./prisma/directus-config.yml"
  debugFile  = "./prisma/directus-debug.local.yml"
  errorFile  = "./prisma/directus-error.local.log"
}

enum PublicationStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model locale {
  /// @uuid
  locale_id           String           @default(dbgenerated("gen_random_uuid()")) @map("locale_id") @db.Uuid
  /// @createdAt
  created_at          DateTime         @default(now()) @map("created_at") @db.Timestamptz(3)
  /// @updatedAt
  updated_at          DateTime         @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// @o2m @constraint(article_locale__locale__fk)
  article_locale_list article_locale[] @relation("article_locale__locale", map: "article_locale__locale__fk")

  @@id([locale_id], map: "locale_id")
  @@map("locale")
}

/// @archive(field: publication_status, archive: ARCHIVED, unarchive: DRAFT)
model article {
  /// @uuid
  article_id          String            @default(dbgenerated("gen_random_uuid()")) @map("article_id") @db.Uuid
  /// @createdAt
  created_at          DateTime          @default(now()) @map("created_at") @db.Timestamptz(3)
  /// @updatedAt
  updated_at          DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(3)
  publication_status  PublicationStatus @default(DRAFT)
  /// @o2m @constraint(article_locale__article__fk)
  article_locale_list article_locale[]  @relation("article_locale__article", map: "article_locale__article__fk")

  @@id([article_id], map: "article_id")
  @@map("article")
}

/// @archive(field: publication_status, archive: ARCHIVED, unarchive: DRAFT)
model article_locale {
  /// @uuid
  article_locale_id   String            @default(dbgenerated("gen_random_uuid()")) @map("article_locale_id") @db.Uuid
  /// @m2o
  article_id          String            @map("article_id") @db.Uuid
  /// @constraint(article_locale__article__fk)
  article             article           @relation("article_locale__article", fields: [article_id], references: [article_id], map: "article_locale__article__fk", onDelete: Cascade, onUpdate: Cascade)
  /// @m2o
  locale_id           String            @map("locale_id") @db.Uuid
  /// @constraint(article_locale__locale__fk)
  locale              locale            @relation("article_locale__locale", fields: [locale_id], references: [locale_id], map: "article_locale__locale__fk", onDelete: Cascade, onUpdate: Cascade)
  article_locale_slug String            @map("article_locale_slug")
  /// @createdAt
  created_at          DateTime          @default(now()) @map("created_at") @db.Timestamptz(3)
  /// @updatedAt
  updated_at          DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(3)
  publication_status  PublicationStatus @default(DRAFT)
  title               String
  body_markdown       String?           @map("body_markdown")

  @@id([article_locale_id], map: "article_locale_id")
  @@unique([article_id, locale_id], map: "article_locale__article_id__locale_id__unique")
  @@unique([article_locale_slug], map: "article_locale_slug__unique")
  @@map("article_locale")
}
